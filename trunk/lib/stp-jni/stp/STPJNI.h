/* DO NOT EDIT THIS FILE - it is machine generated */

#ifndef __stp_STPJNI__
#define __stp_STPJNI__

#include <jni.h>

#ifdef __cplusplus
extern "C"
{
#endif

JNIEXPORT void JNICALL Java_stp_STPJNI_print (JNIEnv *env, jclass);
JNIEXPORT void JNICALL Java_stp_STPJNI_vc_1setFlags (JNIEnv *env, jclass, jchar);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1createValidityChecker (JNIEnv *env, jclass);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1boolType (JNIEnv *env, jclass, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1arrayType (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1varExpr (JNIEnv *env, jclass, jlong, jstring, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1varExpr1 (JNIEnv *env, jclass, jlong, jstring, jint, jint);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1getType (JNIEnv *env, jclass, jlong, jlong);
JNIEXPORT jint  JNICALL Java_stp_STPJNI_vc_1getBVLength (JNIEnv *env, jclass, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1eqExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1trueExpr (JNIEnv *env, jclass, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1falseExpr (JNIEnv *env, jclass, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1notExpr (JNIEnv *env, jclass, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1andExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1andExprN (JNIEnv *env, jclass, jlong, jlongArray, jint);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1orExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1orExprN (JNIEnv *env, jclass, jlong, jlongArray, jint);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1impliesExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1iffExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1iteExpr (JNIEnv *env, jclass, jlong, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1boolToBVExpr (JNIEnv *env, jclass, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1readExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1writeExpr (JNIEnv *env, jclass, jlong, jlong, jlong, jlong);
JNIEXPORT void JNICALL Java_stp_STPJNI_vc_1printExpr (JNIEnv *env, jclass, jlong, jlong);
JNIEXPORT void JNICALL Java_stp_STPJNI_vc_1printExprFile (JNIEnv *env, jclass, jlong, jlong, jint);
JNIEXPORT void JNICALL Java_stp_STPJNI_vc_1printCounterExample (JNIEnv *env, jclass, jlong);
JNIEXPORT void JNICALL Java_stp_STPJNI_vc_1printVarDecls (JNIEnv *env, jclass, jlong);
JNIEXPORT void JNICALL Java_stp_STPJNI_vc_1printAsserts (JNIEnv *env, jclass, jlong, jint);
JNIEXPORT void JNICALL Java_stp_STPJNI_vc_1printQuery (JNIEnv *env, jclass, jlong);
JNIEXPORT void JNICALL Java_stp_STPJNI_vc_1assertFormula (JNIEnv *env, jclass, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1simplify (JNIEnv *env, jclass, jlong, jlong);
JNIEXPORT jint JNICALL Java_stp_STPJNI_vc_1query (JNIEnv *env, jclass, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1getCounterExample (JNIEnv *env, jclass, jlong, jlong);
JNIEXPORT jint JNICALL Java_stp_STPJNI_vc_1counterexample_1size (JNIEnv *env, jclass, jlong);
JNIEXPORT void JNICALL Java_stp_STPJNI_vc_1push (JNIEnv *env, jclass, jlong);
JNIEXPORT void JNICALL Java_stp_STPJNI_vc_1pop (JNIEnv *env, jclass, jlong);
JNIEXPORT jint JNICALL Java_stp_STPJNI_getBVInt (JNIEnv *env, jclass, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvType (JNIEnv *env, jclass, jlong, jint);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bv32Type (JNIEnv *env, jclass, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvConstExprFromStr (JNIEnv *env, jclass, jlong, jstring);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvConstExprFromInt (JNIEnv *env, jclass, jlong, jint, jint);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bv32ConstExprFromInt (JNIEnv *env, jclass, jlong, jint);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvConcatExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvPlusExpr (JNIEnv *env, jclass, jlong, jint, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bv32PlusExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvMinusExpr (JNIEnv *env, jclass, jlong, jint, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bv32MinusExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvMultExpr (JNIEnv *env, jclass, jlong, jint, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bv32MultExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvDivExpr (JNIEnv *env, jclass, jlong, jint, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvModExpr (JNIEnv *env, jclass, jlong, jint, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1sbvDivExpr (JNIEnv *env, jclass, jlong, jint, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1sbvModExpr (JNIEnv *env, jclass, jlong, jint, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvLtExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvLeExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvGtExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvGeExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1sbvLtExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1sbvLeExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1sbvGtExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1sbvGeExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvUMinusExpr (JNIEnv *env, jclass, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvAndExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvOrExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvXorExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvNotExpr (JNIEnv *env, jclass, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvLeftShiftExpr (JNIEnv *env, jclass, jlong, jint, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvRightShiftExpr (JNIEnv *env, jclass, jlong, jint, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bv32LeftShiftExpr (JNIEnv *env, jclass, jlong, jint, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bv32RightShiftExpr (JNIEnv *env, jclass, jlong, jint, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvVar32LeftShiftExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvVar32RightShiftExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvVar32DivByPowOfTwoExpr (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvExtract (JNIEnv *env, jclass, jlong, jlong, jint, jint);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvBoolExtract (JNIEnv *env, jclass, jlong, jlong, jint);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvSignExtend (JNIEnv *env, jclass, jlong, jlong, jint);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvCreateMemoryArray (JNIEnv *env, jclass, jlong, jstring);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvReadMemoryArray (JNIEnv *env, jclass, jlong, jlong, jlong, jint);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1bvWriteToMemoryArray (JNIEnv *env, jclass, jlong, jlong, jlong, jlong, jint);
JNIEXPORT jstring JNICALL Java_stp_STPJNI_exprString (JNIEnv *env, jclass, jlong);
JNIEXPORT jstring JNICALL Java_stp_STPJNI_typeString (JNIEnv *env, jclass, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_getChild (JNIEnv *env, jclass, jlong, jint);
JNIEXPORT jint JNICALL Java_stp_STPJNI_vc_1isBool (JNIEnv *env, jclass, jlong);
JNIEXPORT jint JNICALL Java_stp_STPJNI_vc_1getHashQueryStateToBuffer (JNIEnv *env, jclass, jlong, jlong);
JNIEXPORT void JNICALL Java_stp_STPJNI_vc_1Destroy (JNIEnv *env, jclass, jlong);
JNIEXPORT void JNICALL Java_stp_STPJNI_vc_1DeleteExpr (JNIEnv *env, jclass, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1getWholeCounterExample (JNIEnv *env, jclass, jlong);
JNIEXPORT jlong JNICALL Java_stp_STPJNI_vc_1getTermFromCounterExample (JNIEnv *env, jclass, jlong, jlong, jlong);
JNIEXPORT jint JNICALL Java_stp_STPJNI_getExprKind (JNIEnv *env, jclass, jlong);
JNIEXPORT jint JNICALL Java_stp_STPJNI_getDegree (JNIEnv *env, jclass, jlong);
JNIEXPORT jint JNICALL Java_stp_STPJNI_getBVLength (JNIEnv *env, jclass, jlong);
JNIEXPORT jint JNICALL Java_stp_STPJNI_getType (JNIEnv *env, jclass, jlong);
JNIEXPORT jint JNICALL Java_stp_STPJNI_getVWidth (JNIEnv *env, jclass, jlong);
JNIEXPORT jint JNICALL Java_stp_STPJNI_getIWidth (JNIEnv *env, jclass, jlong);
JNIEXPORT void JNICALL Java_stp_STPJNI_vc_1printCounterExampleFile (JNIEnv *env, jclass, jlong, jint);
JNIEXPORT jstring JNICALL Java_stp_STPJNI_exprName (JNIEnv *env, jclass, jlong);
JNIEXPORT jint JNICALL Java_stp_STPJNI_getExprID (JNIEnv *env, jclass, jlong);
#undef stp_STPJNI_UNDEFINED
#define stp_STPJNI_UNDEFINED 0L
#undef stp_STPJNI_SYMBOL
#define stp_STPJNI_SYMBOL 1L
#undef stp_STPJNI_BVCONST
#define stp_STPJNI_BVCONST 2L
#undef stp_STPJNI_BVNEG
#define stp_STPJNI_BVNEG 3L
#undef stp_STPJNI_BVCONCAT
#define stp_STPJNI_BVCONCAT 4L
#undef stp_STPJNI_BVOR
#define stp_STPJNI_BVOR 5L
#undef stp_STPJNI_BVAND
#define stp_STPJNI_BVAND 6L
#undef stp_STPJNI_BVXOR
#define stp_STPJNI_BVXOR 7L
#undef stp_STPJNI_BVNAND
#define stp_STPJNI_BVNAND 8L
#undef stp_STPJNI_BVNOR
#define stp_STPJNI_BVNOR 9L
#undef stp_STPJNI_BVXNOR
#define stp_STPJNI_BVXNOR 10L
#undef stp_STPJNI_BVEXTRACT
#define stp_STPJNI_BVEXTRACT 11L
#undef stp_STPJNI_BVLEFTSHIFT
#define stp_STPJNI_BVLEFTSHIFT 12L
#undef stp_STPJNI_BVRIGHTSHIFT
#define stp_STPJNI_BVRIGHTSHIFT 13L
#undef stp_STPJNI_BVSRSHIFT
#define stp_STPJNI_BVSRSHIFT 14L
#undef stp_STPJNI_BVVARSHIFT
#define stp_STPJNI_BVVARSHIFT 15L
#undef stp_STPJNI_BVPLUS
#define stp_STPJNI_BVPLUS 16L
#undef stp_STPJNI_BVSUB
#define stp_STPJNI_BVSUB 17L
#undef stp_STPJNI_BVUMINUS
#define stp_STPJNI_BVUMINUS 18L
#undef stp_STPJNI_BVMULTINVERSE
#define stp_STPJNI_BVMULTINVERSE 19L
#undef stp_STPJNI_BVMULT
#define stp_STPJNI_BVMULT 20L
#undef stp_STPJNI_BVDIV
#define stp_STPJNI_BVDIV 21L
#undef stp_STPJNI_BVMOD
#define stp_STPJNI_BVMOD 22L
#undef stp_STPJNI_SBVDIV
#define stp_STPJNI_SBVDIV 23L
#undef stp_STPJNI_SBVMOD
#define stp_STPJNI_SBVMOD 24L
#undef stp_STPJNI_BVSX
#define stp_STPJNI_BVSX 25L
#undef stp_STPJNI_BOOLVEC
#define stp_STPJNI_BOOLVEC 26L
#undef stp_STPJNI_ITE
#define stp_STPJNI_ITE 27L
#undef stp_STPJNI_BVGETBIT
#define stp_STPJNI_BVGETBIT 28L
#undef stp_STPJNI_BVLT
#define stp_STPJNI_BVLT 29L
#undef stp_STPJNI_BVLE
#define stp_STPJNI_BVLE 30L
#undef stp_STPJNI_BVGT
#define stp_STPJNI_BVGT 31L
#undef stp_STPJNI_BVGE
#define stp_STPJNI_BVGE 32L
#undef stp_STPJNI_BVSLT
#define stp_STPJNI_BVSLT 33L
#undef stp_STPJNI_BVSLE
#define stp_STPJNI_BVSLE 34L
#undef stp_STPJNI_BVSGT
#define stp_STPJNI_BVSGT 35L
#undef stp_STPJNI_BVSGE
#define stp_STPJNI_BVSGE 36L
#undef stp_STPJNI_EQ
#define stp_STPJNI_EQ 37L
#undef stp_STPJNI_NEQ
#define stp_STPJNI_NEQ 38L
#undef stp_STPJNI_FALSE
#define stp_STPJNI_FALSE 39L
#undef stp_STPJNI_TRUE
#define stp_STPJNI_TRUE 40L
#undef stp_STPJNI_NOT
#define stp_STPJNI_NOT 41L
#undef stp_STPJNI_AND
#define stp_STPJNI_AND 42L
#undef stp_STPJNI_OR
#define stp_STPJNI_OR 43L
#undef stp_STPJNI_NAND
#define stp_STPJNI_NAND 44L
#undef stp_STPJNI_NOR
#define stp_STPJNI_NOR 45L
#undef stp_STPJNI_XOR
#define stp_STPJNI_XOR 46L
#undef stp_STPJNI_IFF
#define stp_STPJNI_IFF 47L
#undef stp_STPJNI_IMPLIES
#define stp_STPJNI_IMPLIES 48L
#undef stp_STPJNI_READ
#define stp_STPJNI_READ 49L
#undef stp_STPJNI_WRITE
#define stp_STPJNI_WRITE 50L
#undef stp_STPJNI_ARRAY
#define stp_STPJNI_ARRAY 51L
#undef stp_STPJNI_BITVECTOR
#define stp_STPJNI_BITVECTOR 52L
#undef stp_STPJNI_BOOLEAN
#define stp_STPJNI_BOOLEAN 53L
#undef stp_STPJNI_BOOLEAN_TYPE
#define stp_STPJNI_BOOLEAN_TYPE 0L
#undef stp_STPJNI_BITVECTOR_TYPE
#define stp_STPJNI_BITVECTOR_TYPE 1L
#undef stp_STPJNI_ARRAY_TYPE
#define stp_STPJNI_ARRAY_TYPE 2L
#undef stp_STPJNI_UNKNOWN_TYPE
#define stp_STPJNI_UNKNOWN_TYPE 3L

#ifdef __cplusplus
}
#endif

#endif /* __stp_STPJNI__ */
