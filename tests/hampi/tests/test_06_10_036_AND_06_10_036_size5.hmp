/*CFG Analyzer, version 03/12/2007

A word in the intersection of L(G1) ... L(G2) is, e.g., "!f~!f" of length 5
*/
var hampiStringVar : 5;
cfg expression :=  arithmetic_expression | boolean_expression | "d" ;
cfg arithmetic_expression :=  simple_arithmetic_expression | "i" simple_arithmetic_expression "e" arithmetic_expression ;
cfg simple_arithmetic_expression :=  term | "+" term | simple_arithmetic_expression "+" term ;
cfg term :=  factor | term "*" factor ;
cfg factor :=  primary | factor "^" primary ;
cfg primary :=  "u" | "v" | "f" | "(" arithmetic_expression ")" ;
cfg boolean_expression :=  simple_boolean | "i" simple_boolean "e" boolean_expression ;
cfg simple_boolean :=  implication | simple_boolean "~" implication ;
cfg implication :=  boolean_term | implication ">" boolean_term ;
cfg boolean_term :=  boolean_factor | boolean_term ":" boolean_factor ;
cfg boolean_factor :=  boolean_secondary | boolean_factor "&" boolean_secondary ;
cfg boolean_secondary :=  boolean_primary | "!" boolean_primary ;
cfg boolean_primary :=  "l" | "v" | "f" | "r" | "(" boolean_expression ")" ;
reg limit := fix(expression, 5);
assert hampiStringVar in limit;
